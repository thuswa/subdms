$Id$
Last modified Mon Apr 27 13:04:24 2009 on violator
update count: 95

Subdms - Subversion Based Document Management System
####################################################

Table of Contents
=================
I.   Goals
II.  How to set-up Subdms
III. How to use
IV.  Document list
V.   Command-line usage
VI.  Document Integration

I. Goals
--------
The goal with this project is to create a full-fledged DMS based on subversion 
to handle the most common Office document file formats, 
primarily Open Document Format (ODF).
 
II. How to set-up Subdms
------------------------
1.  Install the subdms package, see INSTALL file for details.

2.  Have a look in the config file /etc/subdms/subdms.cfg to see where the stuff
    gets installed, and change that if you like. Also you might want to change 
    the default editors for the different filetypes. 

3a. If you have used version 0.1 of subdms to store a larger amount of docments
    you might want to upgrade to the newer 0.2 version, see UPGRADE file for 
    details.  

3b. With a new clean install, you have to initiate the server-side of subdms by 
    running the following command in the terminal:
 
    > subdms-server
   
    This will setup the workspace directory, the database and the repository.

5.  Run the client by typing:
   
    > subdms

III. How to use
---------------
Using the graphical user interface:

Note: There is a Right-click menu available that corresponds to the "Tools" 
      menu in the menubar.

 1. Start by adding a new project using the Menu entry 
    "Create" -> "New Project" 

 2. Creating a Document can be done in three ways using the Menu entry
    "Create" -> "New Document". 

    a. From Template: Create document from a built-in template file
    b. From File: adding a existing file to the DMS.
    c. From Document: Base the document on an existing document in the DMS.

 3. List all documents using Menu "View" -> "List Documents". 

 4. List all templates using Menu "View" -> "List Templates". 

 5. To get more information about a document use the "Tools" -> "Document Info".
    In this dialog you can also edit the document title and the document 
    keywords, Press the "Save" button to apply any changes.

 6. View document. Select document in the document list. 
    Use menu entry "Tools" -> "View Document"
    This will display a read-only copy of the document in a viewer/editor 
    defined in: /etc/subdms/sumbdms.cfg	
   
 7. Edit document. Select document in the document list. 
    Use menu entry "Tools" -> "Edit Document"
    This will launch an editor defined in /etc/subdms/sumbdms.cfg.

 8. Commit Changes. As with other version control systems, local changes made 
    to the document can be committed to the central repository. 
    Select the document in the list and use "Tools" -> "Commit Changes", 
    this will launch a dialog where a commit message can be entered.

 9. Check-in document. To remove the local copy of the document, select the 
    document in the list and use "Tools" -> "Check-in Document". 
    This will commit any local changes made to the document and remove 
    the local copy from workspace.

10. Release document. The "Release Document" action also resides in the "Tools"
    Menu. Select the document you want to release in the document list. 
    This action will check-in your document, set its to status "released", 
    and any prior issues to status "obsolete". Both the status "released" and
    "obsolete" means that a document issue with one of these status can only be 
    checked out read-only, and no more changes can be made to those issues.  
 
11. Create a new issue of the document. This action is found in the "Create" 
    menu as "New issue". As with the other actions, the document in question 
    must be selected in the document list. Note that this action only works on 
    documents with status "released".  

IV. Document list
-----------------
The document list displays information of the created documents. 
The first unnamed column displays the state of the document as follows:
    O = Document is Checked-out	  
    I = Document is Checked-in
    M = Document is locally modified

V. Command-line usage
---------------------   
Usage: subdms add filename project doctype [title]

Example:
 > subdms add filename.txt myproject note "Technical note"
or:
 > subdms add "this project note.txt" myproject note

This command line interface makes it possible to add documents in the DMS.
It is a compliment to add files via the graphical user interface.
And opens for the possibility to write scripts to automate the adding of files. 
If you enter a title, make sure the title is a string.
If no title is given the filename without extension is set as title.

VI. Document Integration
------------------------
Subdms integrates with your documents by setting values on a number fields: 

Field name        Description  
-----------       --------------
subdmstitle	  Document title
subdmsdocid	  Document id 
subdmsissue       Document issue
subdmsstatus      Document Status 
subdmsrdate       Release date
subdmsauthor	  Author
subdmsproj	  Project name
subdmsdesc	  Project description
subdmskeyws	  Document keywords

For now only .tex files are supported. For .tex files you define the fields as 
new commands in the top of your document, as seen below: 

\newcommand {\subdmstitle} {} 
\newcommand {\subdmsdocid} {} 
\newcommand {\subdmsissue} {} 
\newcommand {\subdmsstatus} {} 
\newcommand {\subdmsrdate} {}
\newcommand {\subdmsauthor} {}
\newcommand {\subdmsproj} {}
\newcommand {\subdmsdesc} {}
\newcommand {\subdmskeyw} {}
 
Subdms will insert the values between the empty curly brackets to define the 
fields. 

When you edit the document you can use position these fields where you want to 
have them, most commonly to define the frontpage of your document/report. For
instance to use the title field to define the document title:

\bf \Large \subdmstitle \\

This would give you the document title in a large bold faced font.  

See the "default.tex" template for an example how the fields have been used. 
